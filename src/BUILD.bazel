load("@angular//:index.bzl", "ng_module")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_library", "ts_web_test")

# This build rule invokes the Angular compiler `ngc` on a
# single compilation unit. In this example, there is only
# one compilation unit in the repository, but if the library
# were larger, we would split up some subdirectories into
# separate Bazel "packages" with their own @NgModule class
# and ng_module build rule, so that we get benefits of
# incremental compilation only of the affected package.
ng_module(
    name = "src",
    srcs = glob(
        ["*.ts"],
        exclude = ["*.spec.ts"]
    ),
    assets = glob([
        "*.css",
        "*.html",
    ]),
    tsconfig = "//:tsconfig.json",
)

ts_library(
    name = "test_lib",
    testonly = 1,
    srcs = glob(["*.spec.ts"]),
    deps = [":src"],
)

ts_web_test(
    name = "test",
    bootstrap = ["//:angular_bootstrap_scripts"],
    deps = [
        ":test_lib",
        "//:angular_bundles",
        "//:angular_test_bundles",
    ],
)
